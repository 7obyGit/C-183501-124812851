baseUrl="https://raw.githubusercontent.com/7obyGit/C-183501-124812851/main/cc2/src/entrypoints/gps/release"function download(a)local b=http.get(a)if b==nil then error("Could not download file: "..a)end;local c=b.readAll()c=c:sub(1,1)=="?"and c:sub(2)or c;b.close()return c end;function createDirectory(d)local e={}for f in string.gmatch(d,"[^/]+")do table.insert(e,f)end;local g=""for h=1,#e do g=fs.combine(g,e[h])if not fs.exists(g)then fs.makeDir(g)end end end;function writeFile(d,i)local j=fs.getDir(d)if j~=""then createDirectory(j)end;local k=fs.open(d,"w")k.write(i)k.close()end;function readFile(d)local k=fs.open(d,"r")if not k then error("Could not open file: "..d)end;local i=k.readAll()k.close()return i end;function deleteDirectory(d)if not fs.exists(d)then return end;if not fs.isDir(d)then fs.delete(d)return end;for l,m in ipairs(fs.list(d))do deleteDirectory(fs.combine(d,m))end;fs.delete(d)end;function copyDirectory(n,o)if not fs.exists(n)or not fs.isDir(n)then error("Source directory does not exist or is not a directory: "..n)end;if not fs.exists(o)then fs.makeDir(o)end;for l,m in ipairs(fs.list(n))do local p=fs.combine(n,m)local q=fs.combine(o,m)if fs.isDir(p)then copyDirectory(p,q)else if fs.exists(q)then fs.delete(q)end;fs.copy(p,q)end end end;function moveDirectory(n,o)copyDirectory(n,o)deleteDirectory(n)end;function update()oldInfo={}if fs.exists("info.json")then oldInfo=textutils.unserializeJSON(readFile("info.json"))end;print("\n(1/5) Loading Info...")print(" | [ ] Downloading `info.json`...")infoText=download(baseUrl.."/info.json")print(" | [*] Downloaded latest `info.json`")writeFile("info.json",infoText)print(" | Saved "..#infoText.." bytes to `info.json`")info=textutils.unserializeJSON(infoText)print(" | Parsed `info.json`")if info.version==oldInfo.version then local r=info.name or"Application"print(" | "..r.." is up to date")print(" | Update complete!")return end;print(" | Complete!")print("\n(2/5) Preparing Environment...")deleteDirectory("old")print(" | Deleted previous backup files")if fs.exists("app")then moveDirectory("app","old")print(" | Created new backup")end;print(" | Environment ready!")print("\n(3/5) Downloading Files...")manifest=info.deployment.manifest;if not manifest then error("`deployment.manifest` field not found in `info.json`.")end;print(" | Retrieved `deployment.manifest`")print(" | "..#manifest.." files identified")table.insert(manifest,"/app/main.lua")table.insert(manifest,"/run.lua")table.insert(manifest,"/startup.lua")print(" | Key files added")print(" | Starting download of "..#manifest.." files...")for l,d in ipairs(manifest)do print(" | [ ] Downloading '"..d.."'...")local c=download(baseUrl..d)writeFile(d,c)print(" | [*] Download Complete!")end;print(" | Complete!")print("\n(4/5) Config Script")configScript=info.deployment.configScript;if configScript then print(" | Retrieved `deployment.configScript`")for l,s in ipairs(configScript)do print(" | > "..s)shell.run(s)end;print(" | Complete!")else print(" | \"`deployment.configScript` field not found in `info.json`.\"")print(" | Skipped!")end;print("\n(5/5) Cleanup")if not(info.update or{}).cleanUpdate and fs.exists("old/data")then copyDirectory("old/data","app/data")print(" | Restored data files")end;print(" | Complete!")print("\nUpdate Complete!")print("Previous Version: "..(oldInfo.version or"Unknown"))print("Version: "..info.version)print("Name: "..info.name)print("Description: "..info.description)os.sleep(3)end;update()