function MODULE_entrypoints_scripts_task_digRegion()
	local forwards = 0
	local up = 0
	local down = 0
	if #arg % 2 ~= 0 then
	    print("Invalid arguments. Usage: dig.lua <direction> <distance> ...")
	    return
	end
	local validDirections = { forward = true, up = true, down = true }
	for i = 1, #arg, 2 do
	    local direction = arg[i]
	    local distance = tonumber(arg[i + 1])
	    if not validDirections[direction] or not distance then
	        print("Invalid arguments. Usage: dig.lua <direction> <distance> ...")
	        return
	    end
	    if distance < 0 then
	        print("Distances must be non-negative numbers.")
	        return
	    end
	    if direction == "forward" then
	        forwards = distance
	    elseif direction == "up" then
	        up = distance
	    elseif direction == "down" then
	        down = distance
	    end
	end
	if forwards <= 0 then
	    print("Forward distance must be a positive number.")
	    return
	end
	local total_height = 1 + up + down
	for i = 1, down do
	    while not turtle.down() do
	        turtle.digDown()
	        sleep(0.2)
	    end
	end
	for layer = 1, total_height do
	    for step = 1, forwards do
	        while not turtle.forward() do
	            turtle.dig()
	            sleep(0.2)
	        end
	    end
	    if layer < total_height then
	        turtle.turnLeft()
	        turtle.turnLeft()
	        while not turtle.up() do
	            turtle.digUp()
	            sleep(0.2)
	        end
	    end
	end
	print("Mining complete!")
end
local entrypoints_scripts_task_digRegion = MODULE_entrypoints_scripts_task_digRegion()