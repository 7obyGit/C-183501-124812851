function MODULE_entrypoints_scripts_task_digRegion()
	local function parse_args()
	    if #arg ~= 6 then
	        print("Usage: dig.lua forward <blocks> left/right <blocks> down/up <blocks>")
	        return nil
	    end
	    local dims = {}
	    dims.forward = tonumber(arg[2])
	    dims.width = tonumber(arg[4])
	    dims.vertical = tonumber(arg[6])
	    dims.is_left = arg[3] == "left"
	    dims.is_down = arg[5] == "down"
	    if not dims.forward or not dims.width or not dims.vertical then
	        print("All dimensions must be numbers")
	        return nil
	    end
	    return dims
	end
	local function mine_layer(forward_blocks, width_blocks, is_left)
	    for row = 1, width_blocks do
	        for i = 1, forward_blocks - 1 do
	            turtle.dig()
	            turtle.forward()
	        end
	        if row < width_blocks then
	            if is_left then
	                if row % 2 == 1 then
	                    turtle.turnLeft()
	                    turtle.dig()
	                    turtle.forward()
	                    turtle.turnLeft()
	                else
	                    turtle.turnRight()
	                    turtle.dig()
	                    turtle.forward()
	                    turtle.turnRight()
	                end
	            else
	                if row % 2 == 1 then
	                    turtle.turnRight()
	                    turtle.dig()
	                    turtle.forward()
	                    turtle.turnRight()
	                else
	                    turtle.turnLeft()
	                    turtle.dig()
	                    turtle.forward()
	                    turtle.turnLeft()
	                end
	            end
	        end
	    end
	end
	local function return_to_layer_start(forward_blocks, width_blocks, is_left)
	    if width_blocks % 2 == 1 then
	        turtle.turnRight()
	        turtle.turnRight()
	        for i = 1, forward_blocks - 1 do
	            turtle.forward()
	        end
	    end
	    if is_left then
	        turtle.turnRight()
	    else
	        turtle.turnLeft()
	    end
	    for i = 1, width_blocks - 1 do
	        turtle.forward()
	    end
	    if is_left then
	        turtle.turnLeft()
	    else
	        turtle.turnRight()
	    end
	end
	local function mine_volume(dims)
	    for layer = 1, dims.vertical do
	        mine_layer(dims.forward, dims.width, dims.is_left)
	        return_to_layer_start(dims.forward, dims.width, dims.is_left)
	        if layer < dims.vertical then
	            if dims.is_down then
	                turtle.digDown()
	                turtle.down()
	            else
	                turtle.digUp()
	                turtle.up()
	            end
	        end
	    end
	    if dims.is_down then
	        for i = 1, dims.vertical - 1 do
	            turtle.up()
	        end
	    else
	        for i = 1, dims.vertical - 1 do
	            turtle.down()
	        end
	    end
	end
	local dims = parse_args()
	if not dims then
	    return
	end
	print(string.format("Mining volume: forward %d, %s %d, %s %d",
	    dims.forward,
	    dims.is_left and "left" or "right",
	    dims.width,
	    dims.is_down and "down" or "up",
	    dims.vertical))
	mine_volume(dims)
	print("Mining complete!")
end
local entrypoints_scripts_task_digRegion = MODULE_entrypoints_scripts_task_digRegion()